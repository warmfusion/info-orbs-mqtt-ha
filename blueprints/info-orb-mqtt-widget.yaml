blueprint:
  name: Info Orb MQTT Widgets
  description: Creates Info Orb widgets from HA sensors compatible with the Info Orbs MQTT DrawString Widget
  domain: automation
  source_url: https://github.com/warmfusion/info-orbs-mqtt-ha/blob/main/blueprints/info-orb-mqtt-widget.yaml

  input:
    trigger_minutes:
      name: Trigger every X Minutes
      description: "Select time pattern frequency to run automation"
      selector:
        select:
          options:
            - "/2"
            - "/5"
            - "/10"
            - "/15"
            - "/30"
            - "/60"
            - "/120"
            - "/180"
      default: "/5"
    orb_topic:
      name: Info Org MQTT setup topic
      description: "This has to match the topic defined the config.h file (MQTT_SETUP_TOPIC)"
      selector:
        text:
      default: "info-orbs/setup/orbs"

    orb1_template:
      name: "Orb 1: Template"
      description: "Template to render for orb 1 value"
      selector:
        text:
          multiline: true
      default: "{{ states('sensor.time') }}"

    orb2_template:
      name: "Orb 2: Template"
      description: "Template to render for orb 2 value"
      selector:
        text:
          multiline: true
      default: "{{ now().strftime('%A') }}"

    orb3_template:
      name: "Orb 3: Template"
      description: "Template to render for orb 3 value"
      selector:
        text:
          multiline: true
      default: "{{ as_timestamp(state_attr('sun.sun', 'next_rising')) | timestamp_custom('%I:%M %p') }}"

    orb4_template:
      name: "Orb 4: Template"
      description: "Template to render for orb 4 value"
      selector:
        text:
          multiline: true
      default: "{{ states('sensor.solar_angle') | float | round(0) }}"

    orb5_template:
      name: "Orb 5: Template"
      description: "Template to render for orb 5 value"
      selector:
        text:
          multiline: true
      default: "{{ states('sensor.date') }}"

variables:
  orb1_template_var: !input "orb1_template"
  orb2_template_var: !input "orb2_template"
  orb3_template_var: !input "orb3_template"
  orb4_template_var: !input "orb4_template"
  orb5_template_var: !input "orb5_template"

triggers:
  - trigger: time_pattern
    minutes: !input "trigger_minutes"
conditions: []
actions:
  - action: mqtt.publish # orb setup
    metadata: {}
    data:
      evaluate_payload: false
      retain: true
      topic: !input "orb_topic"
      payload: |-
        {
          "orbs": [
            {
              "orbid": 0,
              "topicsrc": "info-orbs/orb/0",
              "drawscript": 1
            },
            {
              "orbid": 1,
              "topicsrc": "info-orbs/orb/1",
              "drawscript": 1
            },
            {
              "orbid": 2,
              "topicsrc": "info-orbs/orb/2",
              "drawscript": 1
            },
            {
              "orbid": 3,
              "topicsrc": "info-orbs/orb/3",
              "drawscript": 1
            },
            {
              "orbid": 4,
              "topicsrc": "info-orbs/orb/4",
              "drawscript": 1
            }
          ]
        }
  - action: mqtt.publish # orb 1 content
    metadata: {}
    data:
      evaluate_payload: true
      qos: 0
      retain: true
      payload: "{{ orb1_template_var }}"
      topic: "info-orbs/orb/0"
  - action: mqtt.publish # orb 2 content
    metadata: {}
    data:
      evaluate_payload: true
      qos: 0
      retain: true
      payload: "{{ orb2_template_var }}"
      topic: "info-orbs/orb/1"
  - action: mqtt.publish # orb 3 content
    metadata: {}
    data:
      evaluate_payload: true
      qos: 0
      retain: true
      payload: "{{ orb3_template_var }}"
      topic: "info-orbs/orb/2"
  - action: mqtt.publish # orb 4 content
    metadata: {}
    data:
      evaluate_payload: true
      qos: 0
      retain: true
      payload: "{{ orb4_template_var }}"
      topic: "info-orbs/orb/3"
  - action: mqtt.publish # orb 5 content
    metadata: {}
    data:
      evaluate_payload: true
      qos: 0
      retain: true
      payload: "{{ orb5_template_var }}"
      topic: "info-orbs/orb/4"
mode: single
